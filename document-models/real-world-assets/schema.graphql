type RealWorldAssetsState {
  accounts: [Account!]!
  principalLenderAccountId: ID!
  spvs: [Spv!]!
  serviceProviderFeeTypes: [ServiceProviderFeeType!]!
  fixedIncomeTypes: [FixedIncomeType!]!
  portfolio: [Asset!]!
  transactions: [GroupTransaction!]!
}

union Asset = FixedIncome | Cash

type FixedIncome {
  id: ID!
  type: AssetType!
  fixedIncomeTypeId: ID!
  name: String!
  spvId: ID!
  purchaseDate: DateTime!
  notional: Float!
  assetProceeds: Float!
  purchaseProceeds: Float!
  salesProceeds: Float!
  purchasePrice: Float!
  totalDiscount: Float!
  realizedSurplus: Float!
  maturity: DateTime
  ISIN: String
  CUSIP: String
  coupon: Float
}

type Cash {
  id: ID!
  type: AssetType!
  spvId: ID!
  currency: String!
  balance: Float!
}

type FixedIncomeType {
  id: ID!
  name: String!
}

type Spv {
  id: ID!
  name: String!
}

enum AssetType {
  Cash
  FixedIncome
}

type BaseTransaction {
  id: ID!
  assetType: AssetType!
  assetId: ID!
  amount: Float!
  entryTime: DateTime!
  tradeTime: DateTime
  settlementTime: DateTime
  accountId: ID
  counterPartyAccountId: ID
}

type Account {
  id: ID!
  reference: String!
  label: String
}

type TransactionFee {
  id: ID!
  serviceProviderFeeTypeId: ID!
  amount: Float!
}

type GroupTransaction {
  id: ID!
  type: GroupTransactionType!
  entryTime: DateTime!
  cashBalanceChange: Float!
  unitPrice: Float
  fees: [TransactionFee!]
  cashTransaction: BaseTransaction!
  fixedIncomeTransaction: BaseTransaction
  serviceProviderFeeTypeId: ID
  txRef: String
}

enum GroupTransactionType {
  PrincipalDraw
  PrincipalReturn
  AssetPurchase
  AssetSale
  InterestIncome
  InterestPayment
  FeesIncome
  FeesPayment
}

type ServiceProviderFeeType {
  id: ID!
  name: String!
  feeType: String!
  accountId: ID!
}

scalar DateTime

input CreateSpvInput {
  id: ID!
  name: String!
}

input EditSpvInput {
  id: ID!
  name: String
}

input DeleteSpvInput {
  id: ID!
}

input CreateServiceProviderFeeTypeInput {
  id: ID!
  name: String!
  feeType: String!
  accountId: ID!
}

input EditServiceProviderFeeTypeInput {
  id: ID!
  name: String
  feeType: String
  accountId: ID
}

input DeleteServiceProviderFeeTypeInput {
  id: ID!
}

input CreateFixedIncomeTypeInput {
  id: ID!
  name: String!
}

input EditFixedIncomeTypeInput {
  id: ID!
  name: String
}

input DeleteFixedIncomeTypeInput {
  id: ID!
}

input CreateFixedIncomeAssetInput {
  id: ID!
  fixedIncomeTypeId: ID!
  spvId: ID!
  name: String!
  maturity: DateTime
  ISIN: String
  CUSIP: String
  coupon: Float
}

input CreateCashAssetInput {
  id: ID!
  spvId: ID!
  currency: String!
  balance: Float!
}

input EditCashAssetInput {
  id: ID!
  spvId: ID
  currency: String
}

input EditFixedIncomeAssetInput {
  id: ID!
  fixedIncomeTypeId: ID
  spvId: ID
  name: String
  ISIN: String
  CUSIP: String
  coupon: Float
  maturity: DateTime
}

input DeleteFixedIncomeAssetInput {
  id: ID!
}

input DeleteCashAssetInput {
  id: ID!
}

input CreateAccountInput {
  id: ID!
  reference: String!
  label: String
}

input EditAccountInput {
  id: ID!
  reference: String
  label: String
}

input DeleteAccountInput {
  id: ID!
}

input BaseTransactionInput {
  id: ID!
  assetType: AssetType
  assetId: ID
  amount: Float
  entryTime: DateTime
  tradeTime: DateTime
  settlementTime: DateTime
  accountId: ID
  counterPartyAccountId: ID
}

input EditTransactionFeeInput {
  id: ID
  serviceProviderFeeTypeId: ID
  amount: Float
}

input CreateGroupTransactionInput {
  id: ID!
  type: GroupTransactionType!
  entryTime: DateTime!
  cashTransaction: BaseTransaction!
  fees: [TransactionFee!]
  fixedIncomeTransaction: BaseTransaction
  serviceProviderFeeTypeId: ID
  txRef: String
}

input EditGroupTransactionInput {
  id: ID!
  type: GroupTransactionType
  entryTime: DateTime
  cashTransaction: BaseTransactionInput
  fixedIncomeTransaction: BaseTransactionInput
  serviceProviderFeeTypeId: ID
  txRef: String
}

input DeleteGroupTransactionInput {
  id: ID!
}

input AddFeesToGroupTransactionInput {
  id: ID!
  fees: [TransactionFee!]
}

input EditGroupTransactionFeesInput {
  id: ID!
  fees: [EditTransactionFeeInput!]
}

input RemoveFeesFromGroupTransactionInput {
  id: ID!
  feeIds: [ID!]
}
